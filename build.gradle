buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'io.ratpack:ratpack-gradle:1.4.1',
                'com.github.jengelman.gradle.plugins:shadow:1.2.1'
    }
}

plugins {
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.6.3'
}

allprojects {
    apply plugin: 'groovy'
    apply plugin: 'idea'
    apply plugin: 'jacoco'
    repositories {
        jcenter()
    }
    if (!JavaVersion.current().java8Compatible) {
        throw new IllegalStateException("Must be built with Java 8 or higher")
    }
    idea {
        project {
            //use JDK 1.8 in idea
            jdkName "1.8"
            languageLevel "1.8"
        }
    }
}


// Only report code coverage for projects that are distributed
def publishedProjects = subprojects.findAll { it.path != ':example' }

task jacocoRootReport(type: JacocoReport, group: 'Coverage reports') {
    description = 'Generates an aggregate report from all subprojects'
    dependsOn(publishedProjects.test)

    additionalSourceDirs = files(publishedProjects.sourceSets.main.allSource.srcDirs)
    sourceDirectories = files(publishedProjects.sourceSets.main.allSource.srcDirs)
    classDirectories = files(publishedProjects.sourceSets.main.output)
    executionData = files(publishedProjects.jacocoTestReport.executionData)

    reports {
        html.enabled = true // human readable
        xml.enabled = true // required by coveralls
        html.destination = "${buildDir}/jacocoHtml"
    }

    doFirst {
        executionData = files(executionData.findAll { it.exists() })
    }
}

coveralls {
    sourceDirs = publishedProjects.sourceSets.main.allSource.srcDirs.flatten()
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
}

tasks.coveralls {
    group = 'Coverage reports'
    description = 'Uploads the aggregated coverage report to Coveralls'

    dependsOn jacocoRootReport
    onlyIf { System.env.'CI' }
}

check.dependsOn "coveralls"